#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ JWT —Å–µ–∫—Ä–µ—Ç–∞
 * –ó–∞–ø—É—Å–∫: node generate-jwt-secret.js
 */

const crypto = require('crypto');

function generateJWTSecret() {
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 32 –±–∞–π—Ç–∞ (256 –±–∏—Ç) —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const secret = crypto.randomBytes(32);

  // –ö–æ–¥–∏—Ä—É–µ–º –≤ base64 –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  const base64Secret = secret.toString('base64');

  // –¢–∞–∫–∂–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º hex –≤–µ—Ä—Å–∏—é –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ base64 –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç
  const hexSecret = secret.toString('hex');

  console.log('üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ JWT —Å–µ–∫—Ä–µ—Ç—ã:');
  console.log('');
  console.log('üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π (base64, 44 —Å–∏–º–≤–æ–ª–∞):');
  console.log(base64Secret);
  console.log('');
  console.log('üîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π (hex, 64 —Å–∏–º–≤–æ–ª–∞):');
  console.log(hexSecret);
  console.log('');
  console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ base64 –≤–µ—Ä—Å–∏—é –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è JWT_SECRET');
  console.log('');
  console.log('üìù –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:');
  console.log(`JWT_SECRET="${base64Secret}"`);
}

if (require.main === module) {
  generateJWTSecret();
}
